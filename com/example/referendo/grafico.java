package com.example.proyvotaciones;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.HorizontalLayout;
//import com.vaadin.Application;
import com.vaadin.ui.*;
import com.vaadin.addon.charts.model.ChartType;
import com.vaadin.addon.charts.model.Configuration;
import com.vaadin.addon.charts.model.Cursor;
import com.vaadin.addon.charts.model.DataSeries;
import com.vaadin.addon.charts.model.DataSeriesItem;
import com.vaadin.addon.charts.model.Labels;
import com.vaadin.addon.charts.model.ListSeries;
import com.vaadin.addon.charts.model.PlotOptionsPie;
import com.vaadin.addon.charts.model.Series;
import com.vaadin.addon.charts.model.XAxis;
import com.vaadin.addon.charts.model.YAxis;
import com.vaadin.addon.charts.model.style.SolidColor;
import com.vaadin.addon.charts.*;
import com.vaadin.ui.Component;
import com.vaadin.ui.Button.ClickEvent;

public class grafico extends Panel {

	graficarResultados dataResultados=new graficarResultados();

	Configuration conf;
	Chart chart;
	DataSeries series;	
	Button refrescar;
	Button OK; 
	ComboBox listaVotaciones;
	public DBManager manejoDB;
	String nombreVot="";

	public grafico() {
		manejoDB=new DBManager();
		final FormLayout layout = new FormLayout();
		layout.setMargin(true);
		setContent(layout);
		listaVotaciones = new ComboBox("Procesos de votacion");
		listaVotaciones.setNullSelectionAllowed(false);
		manejoDB.procesosVotacion();/*
		manejoDB.votaciones.add("votaciones 1");
		manejoDB.votaciones.add("votaciones 2");
		manejoDB.votaciones.add("votaciones 3");
		manejoDB.votaciones.add("votaciones 4");*/
		for(int i=0;i<manejoDB.votaciones.size();i++){
			listaVotaciones.addItem(manejoDB.votaciones.get(i));
			
		}
		
		  OK = new Button("Aceptar");
		  OK.addClickListener(new Button.ClickListener() {
              public void buttonClick(ClickEvent event) {
            	  nombreVot=listaVotaciones.getValue().toString();
            	  grafico();
              }
          });
		  layout.addComponent(listaVotaciones);
		  layout.addComponent(OK);

	}
	

	public void grafico(){	
		
		final FormLayout layout = new FormLayout();
		layout.setMargin(true);
		setContent(layout);
        layout.addStyleName("outlined");
        layout.setSizeFull();
        layout.setSpacing(true);
        refrescar = new Button("Refrescar");
        refrescar.addClickListener(new Button.ClickListener() {
            public void buttonClick(ClickEvent event) {
            	grafico();
            }
        });
        
        final HorizontalLayout botones = new HorizontalLayout(
        		refrescar);
        layout.addComponent(botones);
        
        
        
        buildMainLayout();
       layout.addComponent(chart);
  
		
	}	
	
	@AutoGenerated
	private void buildMainLayout() {
		dataResultados.nombreVotacion=nombreVot;
		dataResultados.graficarResultados();
        
        chart = new Chart(ChartType.PIE);
        chart.setWidth("100%");
        chart.setHeight("450px");
      
        conf = chart.getConfiguration();
        conf.setTitle(nombreVot);
        //conf.setSubTitle("The bigger they are the harder they pull");
        conf.getLegend().setEnabled(false); // Disable legend
        PlotOptionsPie plotOptions = new PlotOptionsPie();
        plotOptions.setCursor(Cursor.POINTER);
        Labels dataLabels = new Labels();
        dataLabels.setEnabled(true);
        dataLabels.setColor(new SolidColor(0, 0, 0));
        dataLabels.setConnectorColor(new SolidColor(0, 0, 0));
        dataLabels
                .setFormatter("''+ this.point.name +': '+ this.percentage +' %'");
        plotOptions.setDataLabels(dataLabels);
        conf.setPlotOptions(plotOptions);
        
   

       	//dataResultados.refresh();
        series = new DataSeries();
        DataSeriesItem ganando = new DataSeriesItem(dataResultados.tendencias.get(0),dataResultados.porcentajes.get(0));
        ganando.setSliced(true);
        ganando.setSelected(true);
        series.add(ganando);
	
        for(int i=1;i<dataResultados.cantTendencias;i++){
        	
        	series.add(new DataSeriesItem(dataResultados.tendencias.get(i), dataResultados.porcentajes.get(i)));
        }
        conf.setSeries(series);

	}

}
